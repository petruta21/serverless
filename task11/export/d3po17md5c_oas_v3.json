{
  "openapi": "3.0.1",
  "info": {
    "title": "task11_api",
    "version": "2024-09-15T15:54:47Z"
  },
  "servers": [
    {
      "url": "https://d3po17md5c.execute-api.eu-central-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "paths": {
    "/reservations": {
      "get": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/tables": {
      "get": {
        "summary": "Retrieve a list of tables",
        "requestBody": {
          "required": false,
          "content": {

          }
        },        
        "responses": {
          "200": {
            "description": "The request has succeeded. The server has processed the request and returned a list of tables.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TablesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. There was an error in the request.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/signin": {
      "post": {
        "summary": "User signin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request has succeeded. The server has processed the sign-in request, and the provided credentials were valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. There was an error in the request."
          }
        }
      }
    },
    "/tables/{tableId}": {
      "get": {
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/signup": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response. Sign-up process is successful.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. There was an error in the request.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Empty": {
        "title": "Empty Schema",
        "type": "object"
      },
      "ReservationRequest": {
        "type": "object",
        "properties": {
          "tableNumber": {
            "$ref": "#/components/schemas/TableNumber"
          },
          "clientName": {
            "$ref": "#/components/schemas/ClientName"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber"
          },
          "date": {
            "$ref": "#/components/schemas/Date"
          },
          "slotTimeStart": {
            "$ref": "#/components/schemas/SlotTimeStart"
          },
          "slotTimeEnd": {
            "$ref": "#/components/schemas/SlotTimeEnd"
          }
        },
        "required": [
          "tableNumber",
          "clientName",
          "phoneNumber",
          "date",
          "slotTimeStart",
          "slotTimeEnd"
        ]
      },
      "TableNumber": {
        "type": "integer",
        "description": "Number of the table",
        "example": 5
      },
      "ClientName": {
        "type": "string",
        "description": "Name of the client",
        "example": "John Doe"
      },
      "PhoneNumber": {
        "type": "string",
        "description": "Phone number of the client",
        "example": "+1234567890"
      },
      "Date": {
        "type": "string",
        "description": "Date of the reservation in yyyy-MM-dd format",
        "format": "date",
        "example": "2024-09-15"
      },
      "SlotTimeStart": {
        "type": "string",
        "description": "Start time of the slot in HH:MM format",
        "pattern": "^([0-1][0-9]|2[0-3]):[0-5][0-9]$",
        "example": "13:00"
      },
      "SlotTimeEnd": {
        "type": "string",
        "description": "End time of the slot in HH:MM format",
        "pattern": "^([0-1][0-9]|2[0-3]):[0-5][0-9]$",
        "example": "15:00"
      },
  "SigninRequest": {
    "type": "object",
    "properties": {
      "email": {
        "type": "string",
        "format": "email",
        "description": "Email address of the user",
        "example": "user@example.com"
      },
      "password": {
        "type": "string",
        "description": "Password for the user (must be alphanumeric + any of \"$%^*\", minimum 12 characters)",
        "pattern": "^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[\\$%^*])[a-zA-Z0-9\\$%^*]{12,}$",
        "example": "Password123$"
      }
    },
    "required": [
      "email",
      "password"
    ]
  },
      "TablesResponse": {
        "type": "object",
        "properties": {
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Table"
            }
          }
        },
        "required": [
          "tables"
        ]
      },
      "Table": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the table",
            "example": 1
          },
          "number": {
            "type": "integer",
            "description": "Number of the table",
            "example": 5
          },
          "places": {
            "type": "integer",
            "description": "Number of people the table can accommodate",
            "example": 4
          },
          "isVip": {
            "type": "boolean",
            "description": "Indicates if the table is in the VIP hall",
            "example": true
          },
          "minOrder": {
            "type": "integer",
            "description": "Optional: Minimum order or deposit required to book the table",
            "example": 100,
            "nullable": true
          }
        },
        "required": [
          "id",
          "number",
          "places",
          "isVip"
        ]
      },
  "SigninResponse": {
    "type": "object",
    "properties": {
      "accessToken": {
        "type": "string",
        "description": "Access token to be used for subsequent authenticated requests",
        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      }
    },
    "required": [
      "accessToken"
    ]
  },
      "SignupRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name of the user",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password for the user (must be alphanumeric + any of \"$%^*\", minimum 12 characters)",
            "pattern": "^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[\\$%^*])[a-zA-Z0-9\\$%^*]{12,}$",
            "example": "Password123$"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "password"
        ]
      }
    },
    "securitySchemes": {
      "authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "x-syndicate-cognito-userpool-names": ["${booking_userpool}"],
          "type": "cognito_user_pools"
        }
      }
    }

  }
}